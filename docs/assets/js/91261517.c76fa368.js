"use strict";(self.webpackChunkqbt_static_docs=self.webpackChunkqbt_static_docs||[]).push([[973],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,b=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?a.createElement(b,l(l({ref:t},u),{},{components:n})):a.createElement(b,l({ref:t},u))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[c]="string"==typeof e?e:o,l[1]=r;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2815:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));const i={title:"Script Installation",hide_title:!0},l=void 0,r={unversionedId:"script-installation",id:"script-installation",title:"Script Installation",description:"This documentation has a toggle in the nav menu to switch between a Basic and Advanced mode. In basic mode you'll see a version of the guide that assumes you have 0 knowledge of this project and how to use it.",source:"@site/docs/script-installation.md",sourceDirName:".",slug:"/script-installation",permalink:"/yme/docs/script-installation",draft:!1,editUrl:"https://github.com/userdocs/qbittorrent-nox-static/tree/master/docs/script-installation.md",tags:[],version:"current",frontMatter:{title:"Script Installation",hide_title:!0},sidebar:"qtb_sidebar",previous:{title:"Prerequisite Check list",permalink:"/yme/docs/Prerequisites"},next:{title:"Script Usage",permalink:"/yme/docs/script-usage"}},s={},d=[{value:"Install using a terminal",id:"install-using-a-terminal",level:3},{value:"Installation one liners using Docker",id:"installation-one-liners-using-docker",level:2},{value:"Build one liners using Docker",id:"build-one-liners-using-docker",level:3}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},c=u("Advanced"),p=u("Tabs"),m=u("TabItem"),b={toc:d},k="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(k,(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(c,{mdxType:"Advanced"}),(0,o.kt)("admonition",{title:"Guide mode toggle",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This documentation has a toggle in the nav menu to switch between a Basic and Advanced mode. In basic mode you'll see a version of the guide that assumes you have 0 knowledge of this project and how to use it."),(0,o.kt)("p",{parentName:"admonition"},"It will avoid complexity and deviation into advanced tangents that would otherwise be helpful to someone who is already familiar with how the project works.")),(0,o.kt)("details",{className:"custom-details"},(0,o.kt)("summary",null,"Things to consider"),(0,o.kt)("p",null,"There are actually a variety of ways you can approach the download and usage of the script."),(0,o.kt)("p",null,"\ud83d\udfe9 Recommend: Download the script to a directory then go to the next section on docker usage where you create a docker around the local script. If you want to build stuff and test things you should download the script locally."),(0,o.kt)("p",null,"\ud83d\udfe7 Optional: Download and bootstrap using a single docker command, which will be expanded on in detail in the next section. If you know exactly what you want to do you can simply make a one liner command to build the binary with no interaction required."),(0,o.kt)("p",null,"\ud83d\udfe5 Not recommended: Download and run on the host. Dependencies like Qt have too many checks for system libs and not all are manageable to make sure the build is isolated from the host. It can work but most likely Qt will break stuff linking to things we don't want."),(0,o.kt)("p",null,"Toggle the Basic guide to Advanced to see the exampled in the next section.")),(0,o.kt)("p",null,"For Alpine specifically, you need may to install bash to use this script."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"apk add bash\n")),(0,o.kt)("h3",{id:"install-using-a-terminal"},"Install using a terminal"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"wget -qO ~/qbt.sh git.io/qbstatic\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl -sLo ~/qbt.sh git.io/qbstatic\n")),(0,o.kt)(c,{mdxType:"Advanced"},(0,o.kt)("h2",{id:"installation-one-liners-using-docker"},"Installation one liners using Docker"),(0,o.kt)(p,{mdxType:"Tabs"},(0,o.kt)(m,{value:"Docker notes",label:"\ud83d\udd39Notes",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"Some notes on the dockers method:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We will use a subdirectory and not your ",(0,o.kt)("inlineCode",{parentName:"li"},"$HOME")," directory as to avoid ",(0,o.kt)("inlineCode",{parentName:"li"},".bashrc")," and ",(0,o.kt)("inlineCode",{parentName:"li"},".profile")," conflicts."),(0,o.kt)("li",{parentName:"ul"},"The subdirectory will be automatically created and named ",(0,o.kt)("inlineCode",{parentName:"li"},"qbt")," by the use of ",(0,o.kt)("inlineCode",{parentName:"li"},"-v ~/qbt:/root")),(0,o.kt)("li",{parentName:"ul"},"The finale default path will be ",(0,o.kt)("inlineCode",{parentName:"li"},"HOME/qbt")," outside the docker container and ",(0,o.kt)("inlineCode",{parentName:"li"},"/root/qbt")," inside it."))),(0,o.kt)(m,{value:"Debian Linux",label:"\ud83d\udd39debian",mdxType:"TabItem"},(0,o.kt)("admonition",{title:"tags",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You use ",(0,o.kt)("inlineCode",{parentName:"p"},"debian:bullseye")," ",(0,o.kt)("inlineCode",{parentName:"p"},"debian:latest"))),(0,o.kt)("p",null,"To bootstrap the container and run it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it -w /root -e \"LANG=en_GB.UTF-8\" -v ~/qbt:/root debian:latest /bin/bash -c 'apt update && apt install -y curl && curl -sLo ~/qbt.sh git.io/qbstatic && bash'\n")),(0,o.kt)("p",null,"Alternatively, to bootstrap a container named ",(0,o.kt)("inlineCode",{parentName:"p"},"qbtstatic")," and it and leave it running in the background for reuse using ",(0,o.kt)("inlineCode",{parentName:"p"},"-d")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --name qbtstatic -it -d -w /root -e \"LANG=en_GB.UTF-8\" -v ~/qbt:/root debian:latest /bin/bash -c 'apt update && apt install -y curl && curl -sLo ~/qbt.sh git.io/qbstatic'\n")),(0,o.kt)("h3",{id:"build-one-liners-using-docker"},"Build one liners using Docker"),(0,o.kt)("p",null,"You can also provide options or environment variables to the script in the one liner commands to do it all in one go.")),(0,o.kt)(m,{value:"Ubuntu Linux",label:"\ud83d\udd39ubuntu",default:!0,mdxType:"TabItem"},(0,o.kt)("admonition",{title:"tags",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You use ",(0,o.kt)("inlineCode",{parentName:"p"},"ubuntu:focal")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ubuntu:jammy")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ubuntu:latest"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it -w /root -e \"LANG=en_GB.UTF-8\" -v ~/qbt:/root ubuntu:latest /bin/bash -c 'apt update && apt install -y curl && curl -sLo ~/qbt.sh git.io/qbstatic && bash'\n")),(0,o.kt)("p",null,"Alternatively, to bootstrap a container named ",(0,o.kt)("inlineCode",{parentName:"p"},"qbtstatic")," and it and leave it running in the background for reuse using ",(0,o.kt)("inlineCode",{parentName:"p"},"-d")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --name qbtstatic -it -d -w /root -e \"LANG=en_GB.UTF-8\" -v ~/qbt:/root ubuntu:latest /bin/bash -c 'apt update && apt install -y curl && curl -sLo ~/qbt.sh git.io/qbstatic'\n"))),(0,o.kt)(m,{value:"Alpine linux",label:"\ud83d\udd39alpine",mdxType:"TabItem"},(0,o.kt)("admonition",{title:"tags",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You use ",(0,o.kt)("inlineCode",{parentName:"p"},"alpine:edge")," ",(0,o.kt)("inlineCode",{parentName:"p"},"alpine:latest"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it -w /root -v ~/qbt:/root alpine:edge /bin/ash -c 'apk update && apk add bash curl && curl -sLo ~/qbt.sh git.io/qbstatic && bash'\n")),(0,o.kt)("p",null,"All in one command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --name qbtstatic -it -w /root -v ~/qbt:/root alpine:edge /bin/ash -c 'apk update && apk add bash curl && curl -sLo ~/qbt.sh git.io/qbstatic'\n"))))))}h.isMDXComponent=!0}}]);