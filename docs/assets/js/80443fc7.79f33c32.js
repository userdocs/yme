"use strict";(self.webpackChunkqbt_static_docs=self.webpackChunkqbt_static_docs||[]).push([[730],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),c=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=c(t.components);return r.createElement(s.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},b=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=c(n),b=o,m=p["".concat(s,".").concat(b)]||p[b]||d[b]||i;return n?r.createElement(m,a(a({ref:e},u),{},{components:n})):r.createElement(m,a({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=b;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[p]="string"==typeof t?t:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},3146:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={title:"Installing nox",hide_title:!0},a=void 0,l={unversionedId:"install-qbittorrent",id:"install-qbittorrent",title:"Installing nox",description:"Once the script has successfully built qbittorrent-nox you can install the binary using this command:",source:"@site/docs/install-qbittorrent.md",sourceDirName:".",slug:"/install-qbittorrent",permalink:"/qbittorrent-nox-static/docs/install-qbittorrent",draft:!1,editUrl:"https://github.com/userdocs/qbittorrent-nox-static/tree/master/docs/install-qbittorrent.md",tags:[],version:"current",frontMatter:{title:"Installing nox",hide_title:!0},sidebar:"qtb_sidebar",previous:{title:"Debugging",permalink:"/qbittorrent-nox-static/docs/debugging"},next:{title:"Nginx proxy",permalink:"/qbittorrent-nox-static/docs/nginx-proxypass"}},s={},c=[{value:"GitHub Releases",id:"github-releases",level:2},{value:"Configuring qbittorrent",id:"configuring-qbittorrent",level:2},{value:"Starting qbittorrent",id:"starting-qbittorrent",level:2},{value:"Web ui",id:"web-ui",level:2},{value:"Second instance",id:"second-instance",level:2}],u=(p="Advanced",function(t){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)});var p;const d={toc:c},b="wrapper";function m(t){let{components:e,...n}=t;return(0,o.kt)(b,(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"Advanced"}),(0,o.kt)("p",null,"Once the script has successfully built ",(0,o.kt)("inlineCode",{parentName:"p"},"qbittorrent-nox")," you can install the binary using this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bash ~/qbittorrent-nox-static.sh install\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"[!warning|iconVisibility:hidden|labelVisibility:hidden|style:callout]"," If you built to a custom directory you will need to specify this to the install command using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-b")," argument.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'bash ~/qbittorrent-nox-static.sh -b "/path/to/built/binary" install\n')),(0,o.kt)("p",null,"The default installation path is determined by type of user executing the script."),(0,o.kt)("p",null,"Built to - ",(0,o.kt)("inlineCode",{parentName:"p"},"qbt-build")),(0,o.kt)("p",null,"Optionally installed to ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin/qbittorrent-nox")),(0,o.kt)("p",null,"Built to - ",(0,o.kt)("inlineCode",{parentName:"p"},"qbt-build")),(0,o.kt)("p",null,"Optionally installed to ",(0,o.kt)("inlineCode",{parentName:"p"},"$HOME/bin/qbittorrent-nox")),(0,o.kt)("h2",{id:"github-releases"},"GitHub Releases"),(0,o.kt)("p",null,"Optionally you can just download the existing prebuilt binaries released using GitHub Actions."),(0,o.kt)("p",null,"Without ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/x86_64-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"With ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/x86_64-icu-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"Without ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/aarch64-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"With ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/aarch64-icu-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"Without ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/armv7-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"With ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/armv7-icu-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"Without ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/armhf-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("p",null,"With ICU"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/bin && source ~/.profile\nwget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/armhf-icu-qbittorrent-nox\nchmod 700 ~/bin/qbittorrent-nox\n")),(0,o.kt)("h2",{id:"configuring-qbittorrent"},"Configuring qbittorrent"),(0,o.kt)("p",null,"If you want to configure qBittorrent before you start it use this method:"),(0,o.kt)("p",null,"Create the default configuration directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/.config/qBittorrent\n")),(0,o.kt)("p",null,"Create the configuration file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"touch ~/.config/qBittorrent/qBittorrent.conf\n")),(0,o.kt)("p",null,"Edit the file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/.config/qBittorrent/qBittorrent.conf\n")),(0,o.kt)("p",null,"Add this. Make sure to change your web ui port."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[LegalNotice]\nAccepted=true\n\n[Preferences]\nWebUI\\Port=PORT\n")),(0,o.kt)("p",null,"Default login:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"username: admin\npassword: adminadmin\n")),(0,o.kt)("p",null,"Some key start-up arguments to help you along. Using the command above with no arguments will loads the defaults or the settings defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.config/qBittorrent/qBittorrent.conf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-none"},"Usage:\n    ./qbittorrent-nox [options] [(<filename> | <url>)...]\nOptions:\n    -v | --version             Display program version and exit\n    -h | --help                Display this help message and exit\n    --webui-port=<port>        Change the Web UI port\n    -d | --daemon              Run in daemon-mode (background)\n    --profile=<dir>            Store configuration files in <dir>\n    --configuration=<name>     Store configuration files in directories\n                               qBittorrent_<name>\n    --relative-fastresume      Hack into libtorrent fastresume files and make\n                               file paths relative to the profile directory\n    files or URLs              Download the torrents passed by the user\n\nOptions when adding new torrents:\n    --save-path=<path>         Torrent save path\n    --add-paused=<true|false>  Add torrents as started or paused\n    --skip-hash-check          Skip hash check\n    --category=<name>          Assign torrents to category. If the category\n                               doesn't exist, it will be created.\n    --sequential               Download files in sequential order\n    --first-and-last           Download first and last pieces first\n    --skip-dialog=<true|false> Specify whether the \"Add New Torrent\" dialog\n                               opens when adding a torrent.\n\nOption values may be supplied via environment variables. For option named\n'parameter-name', environment variable name is 'QBT_PARAMETER_NAME' (in upper\ncase, '-' replaced with '_'). To pass flag values, set the variable to '1' or\n'TRUE'. For example, to disable the splash screen:\nQBT_NO_SPLASH=1 ./qbittorrent-nox\nCommand line parameters take precedence over environment variables\n")),(0,o.kt)("h2",{id:"starting-qbittorrent"},"Starting qbittorrent"),(0,o.kt)("p",null,"Now you just run it and enjoy!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"~/bin/qbittorrent-nox\n")),(0,o.kt)("h2",{id:"web-ui"},"Web ui"),(0,o.kt)("p",null,"To get your external IP with the default qbittorrent command use this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"echo $(wget -qO - icanhazip.com):8080\n")),(0,o.kt)("h2",{id:"second-instance"},"Second instance"),(0,o.kt)("p",null,"When you simply call the binary using ",(0,o.kt)("inlineCode",{parentName:"p"},"~/qbittorrent-nox ")," it will look for it's configuration in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.config/qbittorrent"),"."),(0,o.kt)("p",null,"If you would like to run a second instance using another configuration you can do so like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"~/bin/qbittorrent-nox --configuration=NAME\n")),(0,o.kt)("p",null,"This will create a new configuration directory using this suffix."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"~/.config/qbittorrent_NAME\n")),(0,o.kt)("p",null,"You will also need a custom nginx proxypass and systemd service."),(0,o.kt)("p",null,"And you can now configure this instance separately."))}m.isMDXComponent=!0}}]);