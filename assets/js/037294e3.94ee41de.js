"use strict";(self.webpackChunkqbt_static_docs=self.webpackChunkqbt_static_docs||[]).push([[235],{2508:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var r=t(5893),s=t(1151);const n={title:"Github Workflows"},i=void 0,a={id:"glossary/github-workflows",title:"Github Workflows",description:"A workflow is a configurable automated process that will run one or more jobs. Workflows are defined by a YAML file checked in to your repository and will run when triggered by an event in your repository, or they can be triggered manually, or at a defined schedule.",source:"@site/docs/glossary/github-workflows.md",sourceDirName:"glossary",slug:"/glossary/github-workflows",permalink:"/qbittorrent-nox-static/docs/glossary/github-workflows",draft:!1,unlisted:!1,editUrl:"https://github.com/userdocs/qbittorrent-nox-static/tree/master/docs/glossary/github-workflows.md",tags:[],version:"current",frontMatter:{title:"Github Workflows"}},l={},c=[];function d(e){const o={a:"a",code:"code",hr:"hr",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.p,{children:"A workflow is a configurable automated process that will run one or more jobs. Workflows are defined by a YAML file checked in to your repository and will run when triggered by an event in your repository, or they can be triggered manually, or at a defined schedule."}),"\n",(0,r.jsxs)(o.p,{children:["Workflows are defined in the ",(0,r.jsx)(o.code,{children:".github/workflows directory"})," in a repository, and a repository can have multiple workflows, each of which can perform a different set of tasks. For example, you can have one workflow to build and test pull requests, another workflow to deploy your application every time a release is created, and still another workflow that adds a label every time someone opens a new issue."]}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsxs)(o.p,{children:["Github workflows are typically stored in the Github as ",(0,r.jsx)(o.code,{children:".github/workflows/workflow-name.yml"})," in the project repo."]}),"\n",(0,r.jsxs)(o.p,{children:["In a nutshell a workflow is a special syntax to define some tasks you want done on what are called runners like ",(0,r.jsx)(o.code,{children:"ubuntu-latest"}),"."]}),"\n",(0,r.jsxs)(o.p,{children:["You use a combination of ",(0,r.jsx)(o.code,{children:"yaml"})," and scripting/shell languages to define the some criteria and then create steps towards completion of a job."]}),"\n",(0,r.jsx)(o.p,{children:"This project uses them to build and release static binaries and here is an example of on of the files that build releases using the workflow files."}),"\n",(0,r.jsxs)(o.p,{children:["Action overview for this workflows: ",(0,r.jsx)(o.a,{href:"https://github.com/userdocs/qbittorrent-nox-static/actions/workflows/matrix_multi_build_and_release_qbt_workflow_files.yml",children:"matrix_multi_build_and_release_qbt_workflow_files.yml"})]}),"\n",(0,r.jsxs)(o.p,{children:["The workflow file itself: ",(0,r.jsx)(o.a,{href:"https://github.com/userdocs/qbittorrent-nox-static/blob/master/.github/workflows/matrix_multi_build_and_release_qbt_workflow_files.yml",children:"matrix_multi_build_and_release_qbt_workflow_files.yml"})]}),"\n",(0,r.jsx)(o.p,{children:"If you would like to know more about creating workflows you should read the excellent Github docs."}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.a,{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions",children:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions"})}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.a,{href:"https://docs.github.com/en/actions/using-workflows/about-workflows",children:"https://docs.github.com/en/actions/using-workflows/about-workflows"})})]})}function u(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>a,a:()=>i});var r=t(7294);const s={},n=r.createContext(s);function i(e){const o=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:o},e.children)}}}]);